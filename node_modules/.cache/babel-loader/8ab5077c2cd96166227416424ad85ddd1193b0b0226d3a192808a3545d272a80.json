{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Documents\\\\GitHub\\\\Aulas\\\\React\\\\myblog\\\\src\\\\components\\\\AddCommentForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddCommentForm(_ref) {\n  _s();\n  let {\n    articleName,\n    onArticleUpdated\n  } = _ref;\n  const [name, setName] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const addComment = async () => {\n    const response = await axios.post(`/api/articles/${articleName}/comments`, {\n      postedBy: name,\n      text: commentText\n    });\n    const updatedArticle = response.data;\n    onArticleUpdated(updatedArticle);\n    setName('');\n    setCommentText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add-comment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        rows: \"4\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addComment,\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(AddCommentForm, \"V6DewtPmdtyIhe8O99G4DgRDSWA=\");\n_c = AddCommentForm;\nvar _c;\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"names":["useState","axios","AddCommentForm","articleName","onArticleUpdated","name","setName","commentText","setCommentText","addComment","response","post","postedBy","text","updatedArticle","data","e","target","value"],"sources":["C:/Users/guilh/Documents/GitHub/Aulas/React/myblog/src/components/AddCommentForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function AddCommentForm({ articleName, onArticleUpdated }) {\r\n    const [name, setName] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const response = await axios.post(`/api/articles/${articleName}/comments`, {\r\n            postedBy: name,\r\n            text: commentText,\r\n        });\r\n        const updatedArticle = response.data;\r\n        onArticleUpdated(updatedArticle);\r\n        setName('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    type=\"text\" />\r\n            </label>\r\n            <label>\r\n                Comment:\r\n                <textarea\r\n                    value={commentText}\r\n                    onChange={e => setCommentText(e.target.value)}\r\n                    rows=\"4\"\r\n                    cols=\"50\" />\r\n            </label>\r\n            <button onClick={addComment}>Add Comment</button>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,cAAc,OAAoC;EAAA;EAAA,IAAnC;IAAEC,WAAW;IAAEC;EAAiB,CAAC;EACpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,UAAU,GAAG,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAE,iBAAgBR,WAAY,WAAU,EAAE;MACvES,QAAQ,EAAEP,IAAI;MACdQ,IAAI,EAAEN;IACV,CAAC,CAAC;IACF,MAAMO,cAAc,GAAGJ,QAAQ,CAACK,IAAI;IACpCX,gBAAgB,CAACU,cAAc,CAAC;IAChCR,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,oBACI;IAAK,EAAE,EAAC,kBAAkB;IAAA,wBACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAA,iCAEI;QACI,KAAK,EAAEH,IAAK;QACZ,QAAQ,EAAEW,CAAC,IAAIV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACvC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACd,eACR;MAAA,oCAEI;QACI,KAAK,EAAEX,WAAY;QACnB,QAAQ,EAAES,CAAC,IAAIR,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC9C,IAAI,EAAC,GAAG;QACR,IAAI,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,eACR;MAAQ,OAAO,EAAET,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEd;AAAC,GApCuBP,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}